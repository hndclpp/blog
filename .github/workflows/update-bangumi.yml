name: Update The Latest Data

on:
  schedule:
    - cron: '0 */12 * * *'  # 每12小时运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  update-bangumi:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3      
      - name: Update Bangumi Data
        env:
          BILIBILI_UID: "356742437"  # B站UID
        run: |
          # 设置编码为UTF8
          [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          $PSDefaultParameterValues['*:Encoding'] = 'utf8'
          
          try {
              # 获取追番数据
              $animeUrl = "https://api.bilibili.com/x/space/bangumi/follow/list?vmid=$env:BILIBILI_UID&type=1&follow_status=0&pn=1&ps=30"
              $animeResponse = Invoke-RestMethod -Uri $animeUrl -ErrorAction Stop
              
              # 获取追剧数据
              $dramaUrl = "https://api.bilibili.com/x/space/bangumi/follow/list?vmid=$env:BILIBILI_UID&type=2&follow_status=0&pn=1&ps=30"
              $dramaResponse = Invoke-RestMethod -Uri $dramaUrl -ErrorAction Stop
              
              if ($animeResponse.code -ne 0 -or $dramaResponse.code -ne 0) {
                  Write-Error "获取数据失败"
                  exit 1
              }
              
              # 处理追番数据
              $animeList = $animeResponse.data.list | ForEach-Object {
                  @{
                      title = $_.title
                      cover = $_.cover
                      url = $_.url
                      evaluate = $_.evaluate
                      new_ep = @{
                          index_show = $_.new_ep.index_show
                      }
                  }
              }
              
              # 处理追剧数据
              $dramaList = $dramaResponse.data.list | ForEach-Object {
                  @{
                      title = $_.title
                      cover = $_.cover
                      url = $_.url
                      evaluate = $_.evaluate
                      new_ep = @{
                          index_show = $_.new_ep.index_show
                      }
                  }
              }
              
              # 保存为两个不同的JSON文件
              $animeList | ConvertTo-Json -Depth 10 | Set-Content -Path "public/data/bangumi.json" -Encoding UTF8
              $dramaList | ConvertTo-Json -Depth 10 | Set-Content -Path "public/data/movies.json" -Encoding UTF8
              
              # 如果有更改，提交到仓库
              git config --global user.name 'GitHub Action'
              git config --global user.email 'action@github.com'
              git add bangumi.json movies.json
              git commit -m "Update bangumi and movies data" || exit 0
              git push
              
          } catch {
              Write-Error "发生错误: $_"
              exit 1
          }
        shell: pwsh
